<Window x:Class="FamilyExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"     
        xmlns:self="clr-namespace:FamilyExplorer"
        Title="Family Explorer" WindowState="Maximized" x:Name="FamilyExplorerWindow"
        MouseLeftButtonDown="Window_MouseLeftButtonDown" MouseDown="Window_MouseDown">
    <Window.Resources>

        <DataTemplate x:Key="PersonItem">
            <Border x:Name="BorderMain" Width="{Binding Width}" Height="{Binding Height}" BorderBrush="{Binding BorderBrush}"
                        Background="{Binding Background}" CornerRadius="10" BorderThickness="5"
                    MouseEnter="PersonItem_MouseEnter" MouseLeave="PersonItem_MouseLeave" MouseLeftButtonDown="PersonItem_MouseLeftButtonDown">
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Edit" Command="self:CustomCommands.Edit" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                        <MenuItem Header="Delete" Command="self:CustomCommands.Delete" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                        <MenuItem Header="Add">
                            <MenuItem Header="Mother" Command="self:CustomCommands.AddMother" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Father" Command="self:CustomCommands.AddFather" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Sibling">
                                <MenuItem Header="Same Parents" Command="self:CustomCommands.AddSiblingEqualParents" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                                <MenuItem Header="Same Mother" Command="self:CustomCommands.AddSiblingByMother" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                                <MenuItem Header="Same Father" Command="self:CustomCommands.AddSiblingByFather" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            </MenuItem>
                            <MenuItem Header="Friend" Command="self:CustomCommands.AddFriend" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Partner" Command="self:CustomCommands.AddPartner" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Child" Command="self:CustomCommands.AddChild" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Abuser" Command="self:CustomCommands.AddAbuser" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Victim" Command="self:CustomCommands.AddVictim" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                        </MenuItem>
                        <MenuItem Header="Set">
                            <MenuItem Header="Mother" Command="self:CustomCommands.SetMother" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Father" Command="self:CustomCommands.SetFather" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Friend" Command="self:CustomCommands.SetFriend" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Partner" Command="self:CustomCommands.SetPartner" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Child" Command="self:CustomCommands.SetChild" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Abuser" Command="self:CustomCommands.SetAbuser" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Victim" Command="self:CustomCommands.SetVictim" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                        </MenuItem>
                    </ContextMenu>
                </Border.ContextMenu>
                <Viewbox Width="Auto" Height="Auto">
                    <Grid x:Name="GridMain" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="2*" />
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="TextBlockFirstName" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding FirstName}"/>
                        <TextBlock x:Name="TextBlockLastName" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding LastName}"/>
                    </Grid>
                </Viewbox>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="PersonItemSelected">
            <Border x:Name="BorderMain" Width="{Binding Width}" Height="{Binding Height}" BorderBrush="{Binding BorderBrush}"
                        Background="{Binding Background}" CornerRadius="10" BorderThickness="5">
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Edit" Command="self:CustomCommands.Edit" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                        <MenuItem Header="Delete" Command="self:CustomCommands.Delete" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                        <MenuItem Header="Add">
                            <MenuItem Header="Mother" Command="self:CustomCommands.AddMother" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Father" Command="self:CustomCommands.AddFather" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <!--<MenuItem Header="Sibling">
                                <MenuItem Header="Same Parents" Command="self:CustomCommands.AddSiblingEqualParents" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                                <MenuItem Header="Same Mother" Command="self:CustomCommands.AddSiblingByMother" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                                <MenuItem Header="Same Father" Command="self:CustomCommands.AddSiblingByFather" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            </MenuItem>-->
                            <MenuItem Header="Friend" Command="self:CustomCommands.AddFriend" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Partner" Command="self:CustomCommands.AddPartner" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Child" Command="self:CustomCommands.AddChild" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Abuser" Command="self:CustomCommands.AddAbuser" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Victim" Command="self:CustomCommands.AddVictim" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                        </MenuItem>
                        <MenuItem Header="Set">
                            <MenuItem Header="Mother" Command="self:CustomCommands.SetMother" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Father" Command="self:CustomCommands.SetFather" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Friend" Command="self:CustomCommands.SetFriend" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Partner" Command="self:CustomCommands.SetPartner" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Child" Command="self:CustomCommands.SetChild" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Abuser" Command="self:CustomCommands.SetAbuser" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                            <MenuItem Header="Victim" Command="self:CustomCommands.SetVictim" CommandParameter="{Binding}" CommandTarget="{Binding}"/>
                        </MenuItem>
                    </ContextMenu>
                </Border.ContextMenu>
                <Viewbox Width="Auto" Height="Auto">
                    <Grid x:Name="GridMain" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="2*" />
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="TextBlockFirstName" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding FirstName}"/>
                        <TextBlock x:Name="TextBlockLastName" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding LastName}"/>
                    </Grid>
                </Viewbox>
            </Border>
        </DataTemplate>

        <Style TargetType="{x:Type ListBoxItem}" x:Key="ContainerStyle">
            <Setter Property="ContentTemplate" Value="{StaticResource PersonItem}" />
            <Setter Property="Canvas.Left" Value="{Binding X}" />
            <Setter Property="Canvas.Top" Value="{Binding Y}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource PersonItem}" />
                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListBox}" x:Key="ListBoxStyle">
            <Style.Resources>
                <!-- Style used if item is selected and listbox has keyboard focus -->
                <Style x:Key="NoFocusVisualStyle" TargetType="Control">
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Style>
                <!-- Apply this style -->
                <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource NoFocusVisualStyle}" />
                </Style>
                <!-- Color used if item is selected and listbox has focus -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                <!-- Color used if item is selected and listbox does not have focus -->
                <SolidColorBrush  x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
                <!-- Font color used if item is selected and listbox has focus -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
            </Style.Resources>
        </Style>

    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="self:CustomCommands.Edit" />
        <CommandBinding Command="self:CustomCommands.Delete" />
        <CommandBinding Command="self:CustomCommands.AddMother" CanExecute="AddMother_CanExecute" Executed="AddMother_Executed" />
        <CommandBinding Command="self:CustomCommands.AddFather" CanExecute="AddFather_CanExecute" Executed="AddFather_Executed"/>
        <CommandBinding Command="self:CustomCommands.AddSiblingEqualParents" CanExecute="AddSiblingEqualParents_CanExecute" Executed="AddSiblingEqualParents_Executed"/>
        <CommandBinding Command="self:CustomCommands.AddSiblingByMother" CanExecute="AddSiblingByMother_CanExecute" Executed="AddSiblingByMother_Executed"/>
        <CommandBinding Command="self:CustomCommands.AddSiblingByFather" CanExecute="AddSiblingByFather_CanExecute" Executed="AddSiblingByFather_Executed"/>
        <CommandBinding Command="self:CustomCommands.AddFriend" CanExecute="AddFriend_CanExecute" Executed="AddFriend_Executed"/>
        <CommandBinding Command="self:CustomCommands.AddPartner" CanExecute="AddPartner_CanExecute" Executed="AddPartner_Executed"/>
        <CommandBinding Command="self:CustomCommands.AddChild" CanExecute="AddChild_CanExecute" Executed="AddChild_Executed"/>
        <CommandBinding Command="self:CustomCommands.AddAbuser" CanExecute="AddAbuser_CanExecute" Executed="AddAbuser_Executed"/>
        <CommandBinding Command="self:CustomCommands.AddVictim" CanExecute="AddVictim_CanExecute" Executed="AddVictim_Executed"/>
        <CommandBinding Command="self:CustomCommands.SetMother" CanExecute="SetMother_CanExecute" Executed="SetMother_Executed"/>
        <CommandBinding Command="self:CustomCommands.SetFather" CanExecute="SetFather_CanExecute" Executed="SetFather_Executed"/>
        <CommandBinding Command="self:CustomCommands.SetFriend" CanExecute="SetFriend_CanExecute" Executed="SetFriend_Executed"/>
        <CommandBinding Command="self:CustomCommands.SetPartner" CanExecute="SetPartner_CanExecute" Executed="SetPartner_Executed"/>
        <CommandBinding Command="self:CustomCommands.SetChild" CanExecute="SetChild_CanExecute" Executed="SetChild_Executed"/>
        <CommandBinding Command="self:CustomCommands.SetAbuser" CanExecute="SetAbuser_CanExecute" Executed="SetAbuser_Executed"/>
        <CommandBinding Command="self:CustomCommands.SetVictim" CanExecute="SetVictim_CanExecute" Executed="SetVictim_Executed"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Menu x:Name="MainMenu" Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Header="_New" />
                <MenuItem Header="_Open" />
                <MenuItem Header="_Save" />
                <Separator />
                <MenuItem Header="_Exit" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Undo" />
                <MenuItem Header="_Redo" />
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="_Zoom" />
            </MenuItem>
            <MenuItem Header="_About">
            </MenuItem>
        </Menu>

        <Grid x:Name="MainGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="PersonDataGrid" Grid.Column="0" Background="Azure">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="300"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border Grid.Column="0" Grid.Row="0" BorderBrush="Black" Background="LightGray">
                    <TextBlock Text="Person" FontSize="14" Foreground="Black"/>
                </Border>
            </Grid>
            <GridSplitter Grid.Column="1" ResizeBehavior="PreviousAndNext" Width="7" Background="#FFBCBCBC"/>
            <ScrollViewer Grid.Column="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                <Canvas x:Name="TreeCanvas" SizeChanged="TreeCanvas_SizeChanged"  Width="{Binding TreeWidth}" Height="{Binding TreeHeight}">
                <ListBox x:Name="FamilyTreeListBox"  Style="{StaticResource ListBoxStyle}" Canvas.Left="{Binding XPosition}" Canvas.Top="{Binding YPosition}"
                     Width="{Binding TreeWidth}" Height="{Binding TreeHeight}"
                     ItemsSource="{Binding Members}" ItemContainerStyle="{StaticResource ContainerStyle}" 
                     Cursor="{Binding FamilyTreeCursor}" SelectionMode="Single"
                     MouseLeftButtonDown="FamilyTreeListBox_MouseLeftButtonDown" MouseMove="FamilyTreeListBox_MouseMove" MouseLeftButtonUp="FamilyTreeListBox_MouseLeftButtonUp"
                     PreviewMouseWheel="FamilyTreeListBox_PreviewMouseWheel"
                     RenderTransformOrigin="{Binding TreeScaleOrigin}">
                    <ListBox.RenderTransform>
                        <ScaleTransform x:Name="FamilyTreeListBoxScaleTransform" ScaleX="{Binding TreeScale}" ScaleY="{Binding TreeScale}" />
                    </ListBox.RenderTransform>
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Center Tree" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <Popup x:Name="ToolTipPopup" IsOpen="{Binding SetCommandInProgress}" AllowsTransparency="true">
                    <Border CornerRadius="4" Padding="1" Background="Gainsboro" BorderThickness="1" BorderBrush="DimGray">
                        <TextBlock x:Name="ToolTipTextBox" Text="{Binding SetCommandInProgressDescription}" Background="Azure"/>
                    </Border>
                </Popup>
            </Canvas>
            </ScrollViewer>
        </Grid>

    </Grid>
</Window>
